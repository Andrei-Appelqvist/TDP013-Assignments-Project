{"ast":null,"code":"var _jsxFileName = \"/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/components/dashboard/posts.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PostForm from './PostForm';\nimport { getPosts } from '../../actions/profile'; //import { connect } from 'react-redux';\n\n/*\nconst Post = ({ post }) => {\n  const posts = post.map(post => (\n    <div key={post.id} className={'post'}>\n      <p> {post.name} </p>\n      <p> {post.text} </p>\n    </div>\n  ));\n\n  return (\n    <Fragment>\n      <div>\n        {posts}\n      </div>\n    </Fragment>\n\n\n\n  )\n}\n*/\n\nconst Posts = (getPosts, {\n  profile: {\n    posts,\n    user,\n    _id\n  },\n  isAuthenticated,\n  loading\n}) => {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Posts\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, isAuthenticated && React.createElement(PostForm, {\n    profileId: _id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), posts === null ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Damn!\") : posts.map(post => React.createElement(\"div\", {\n    key: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"profile.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"round-img\",\n    src: user.avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, user.name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, post.text), React.createElement(\"p\", {\n    className: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Posted on \", post.date)))))));\n};\n\nPosts.propTypes = {\n  posts: PropTypes.array.isRequired,\n  isAuthenticated: PropTypes.bool,\n  getPosts: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);","map":{"version":3,"sources":["/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/components/dashboard/posts.js"],"names":["React","Fragment","PropTypes","Link","Redirect","connect","PostForm","getPosts","Posts","profile","posts","user","_id","isAuthenticated","loading","map","post","avatar","name","text","date","propTypes","array","isRequired","bool","func","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAQC,QAAR,MAAsB,YAAtB;AACA,SAAQC,QAAR,QAAuB,uBAAvB,C,CACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAqBA,MAAMC,KAAK,GAAG,CAACD,QAAD,EAAW;AAACE,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,GAAT;AAA6BC,EAAAA,eAA7B;AAA8CC,EAAAA;AAA9C,CAAX,KAAsE;AAClF,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,EACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,EAEA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,eAAe,IACd,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAGD,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAKGF,KAAK,KAAK,IAAV,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAlB,GACCA,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAK;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACJ,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEjB;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,GAAG,EAAGD,IAAI,CAACM,MAFb;AAGE,IAAA,GAAG,EAAC,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,IAAI,CAACO,IAAV,CANF,CADF,CADG,EAWH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACG,IADR,CADF,EAIG;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcH,IAAI,CAACI,IADnB,CAJH,CAXG,CAFiB,CAAnB,CANJ,CAFA,CADF;AAqCD,CAtCD;;AAwCAZ,KAAK,CAACa,SAAN,GAAkB;AAChBX,EAAAA,KAAK,EAAER,SAAS,CAACoB,KAAV,CAAgBC,UADP;AAEhBV,EAAAA,eAAe,EAAEX,SAAS,CAACsB,IAFX;AAGhBjB,EAAAA,QAAQ,EAAEL,SAAS,CAACuB,IAAV,CAAeF;AAHT,CAAlB;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,eAAe,EAAEc,KAAK,CAACC,IAAN,CAAWf;AADI,CAAL,CAA7B;;AAIA,eAAeR,OAAO,CAACqB,eAAD,EAAiB;AAACnB,EAAAA;AAAD,CAAjB,CAAP,CAAoCC,KAApC,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport  PostForm from './PostForm';\nimport {getPosts} from '../../actions/profile';\n//import { connect } from 'react-redux';\n/*\nconst Post = ({ post }) => {\n  const posts = post.map(post => (\n    <div key={post.id} className={'post'}>\n      <p> {post.name} </p>\n      <p> {post.text} </p>\n    </div>\n  ));\n\n  return (\n    <Fragment>\n      <div>\n        {posts}\n      </div>\n    </Fragment>\n\n\n\n  )\n}\n*/\nconst Posts = (getPosts, {profile:{posts, user, _id}, isAuthenticated, loading}) => {\n  return(\n    <Fragment>\n    <h1>Posts</h1><br/>\n    <div className=\"posts\">\n    {isAuthenticated &&(\n      <PostForm profileId ={_id}/>\n    )}\n\n      {posts === null ? (<p>Damn!</p>):(\n        posts.map(post => (<div key={post._id}>\n\n          <div className=\"post bg-white p-1 my-1\">\n       <div>\n         <a href=\"profile.html\">\n           <img\n             className=\"round-img\"\n             src= {user.avatar}\n             alt=\"\"\n           />\n           <h4>{user.name}</h4>\n         </a>\n       </div>\n       <div>\n         <p className=\"my-1\">\n           {post.text}\n         </p>\n          <p className=\"post-date\">\n             Posted on {post.date}\n         </p>\n         </div>\n         </div>\n          </div>)\n      ))}\n\n    </div>\n    </Fragment>\n  );\n}\n\nPosts.propTypes = {\n  posts: PropTypes.array.isRequired,\n  isAuthenticated: PropTypes.bool,\n  getPosts: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps,{getPosts})(Posts);\n"]},"metadata":{},"sourceType":"module"}