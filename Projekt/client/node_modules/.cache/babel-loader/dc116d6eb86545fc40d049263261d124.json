{"ast":null,"code":"var _jsxFileName = \"/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/components/dashboard/posts.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types'; //import { connect } from 'react-redux';\n\n/*\nconst Post = ({ post }) => {\n  const posts = post.map(post => (\n    <div key={post.id} className={'post'}>\n      <p> {post.name} </p>\n      <p> {post.text} </p>\n    </div>\n  ));\n\n  return (\n    <Fragment>\n      <div>\n        {posts}\n      </div>\n    </Fragment>\n\n\n\n  )\n}\n*/\n\nconst Posts = ({\n  profile: {\n    posts,\n    user\n  }\n}) => {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Posts\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, posts === null ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Damn!\") : posts.map(post => React.createElement(\"div\", {\n    key: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, user.name, \": \", post.text))));\n};\n\nPosts.propTypes = {\n  posts: PropTypes.array.isRequired\n};\nexport default Posts;","map":{"version":3,"sources":["/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/components/dashboard/posts.js"],"names":["React","Fragment","PropTypes","Posts","profile","posts","user","map","post","_id","name","text","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAqBA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAT,CAAD,KAA6B;AACzC,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,EACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,EAEA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGD,KAAK,KAAK,IAAV,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAlB,GACCA,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAK;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEhBH,IAAI,CAACI,IAFW,QAEHF,IAAI,CAACG,IAFF,CAAnB,CAHJ,CAFA,CADF;AAeD,CAhBD;;AAkBAR,KAAK,CAACS,SAAN,GAAkB;AAChBP,EAAAA,KAAK,EAAEH,SAAS,CAACW,KAAV,CAAgBC;AADP,CAAlB;AAIA,eAAeX,KAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n//import { connect } from 'react-redux';\n/*\nconst Post = ({ post }) => {\n  const posts = post.map(post => (\n    <div key={post.id} className={'post'}>\n      <p> {post.name} </p>\n      <p> {post.text} </p>\n    </div>\n  ));\n\n  return (\n    <Fragment>\n      <div>\n        {posts}\n      </div>\n    </Fragment>\n\n\n\n  )\n}\n*/\nconst Posts = ({profile:{posts, user}}) => {\n  return(\n    <Fragment>\n    <h1>Posts</h1><br/>\n    <div className=\"posts\">\n\n      {posts === null ? (<p>Damn!</p>):(\n        posts.map(post => (<div key={post._id}>\n\n          {user.name}: {post.text}\n          </div>)\n      ))}\n\n    </div>\n    </Fragment>\n  );\n}\n\nPosts.propTypes = {\n  posts: PropTypes.array.isRequired\n};\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}