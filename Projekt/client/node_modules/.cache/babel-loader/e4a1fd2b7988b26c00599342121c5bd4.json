{"ast":null,"code":"var _jsxFileName = \"/home/andmo435/Desktop/Github/TDP013-Assignments-Project/Projekt/client/src/components/profile/Profile.js\";\nimport PropTypes from 'prop-types';\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport { connect } from 'react-redux';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport { getProfileById, addProfile } from '../../actions/profile';\nimport Posts from '../dashboard/posts';\nimport { Label } from 'reactstrap';\n\nconst Profile = ({\n  getProfileById,\n  addProfile,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  });\n  const friendID = match.params.id;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Back to profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id !== profile.user._id && React.createElement(Label, {\n    onClick: () => addProfile(friendID),\n    id: \"add_friend\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Add friend\"), React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ProfileTop, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(ProfileAbout, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Posts, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))));\n};\n\nProfile.ropTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById,\n  addProfile\n})(Profile);","map":{"version":3,"sources":["/home/andmo435/Desktop/Github/TDP013-Assignments-Project/Projekt/client/src/components/profile/Profile.js"],"names":["PropTypes","React","Fragment","useEffect","Link","Spinner","connect","ProfileTop","ProfileAbout","getProfileById","addProfile","Posts","Label","Profile","profile","loading","auth","match","params","id","friendID","isAuthenticated","user","_id","ropTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,cAAR,EAAwBC,UAAxB,QAAyC,uBAAzC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAIA,SACEC,KADF,QAEO,YAFP;;AAIA,MAAMC,OAAO,GAAG,CAAC;AAACJ,EAAAA,cAAD;AAAiBC,EAAAA,UAAjB;AAA6BI,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAtC;AAA0DC,EAAAA,IAA1D;AAAgEC,EAAAA;AAAhE,CAAD,KAA4E;AAC1Fd,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,CAAT;AAIA,QAAMC,QAAQ,GAAGH,KAAK,CAACC,MAAN,CAAaC,EAA9B;AAEA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,KAAK,IAAZ,IAAqBC,OAArB,GAA+B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,GAA4C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC3C,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAD2C,EAIxCC,IAAI,CAACK,eAAL,IAAwBL,IAAI,CAACD,OAAL,KAAiB,KAAzC,IAAkDC,IAAI,CAACM,IAAL,CAAUC,GAAV,KAAkBT,OAAO,CAACQ,IAAR,CAAaC,GAAjF,IAAyF,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAE,MAAMb,UAAU,CAACU,QAAD,CAAhC;AAA4C,IAAA,EAAE,EAAC,YAA/C;AAA4D,IAAA,SAAS,EAAC,cAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJjD,EAKzC;AAAK,IAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEN,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEA,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CALyC,CAD/C,CADF;AAeD,CAtBD;;AAyBAD,OAAO,CAACW,QAAR,GAAmB;AACjBf,EAAAA,cAAc,EAAET,SAAS,CAACyB,IAAV,CAAeC,UADd;AAEjBZ,EAAAA,OAAO,EAAEd,SAAS,CAAC2B,MAAV,CAAiBD,UAFT;AAGjBV,EAAAA,IAAI,EAAEhB,SAAS,CAAC2B,MAAV,CAAiBD;AAHN,CAAnB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCf,EAAAA,OAAO,EAAEe,KAAK,CAACf,OADiB;AAEhCE,EAAAA,IAAI,EAAEa,KAAK,CAACb;AAFoB,CAAL,CAA7B;;AAKA,eAAeV,OAAO,CAACsB,eAAD,EAAkB;AAACnB,EAAAA,cAAD;AAAiBC,EAAAA;AAAjB,CAAlB,CAAP,CAAuDG,OAAvD,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, {Fragment, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport {connect} from 'react-redux';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport {getProfileById, addProfile} from '../../actions/profile';\nimport Posts from '../dashboard/posts';\n\n\n\nimport {\n  Label\n} from 'reactstrap';\n\nconst Profile = ({getProfileById, addProfile, profile :{profile, loading}, auth, match}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  },);\n\n  const friendID = match.params.id;\n\n  return (\n    <Fragment>\n      {profile === null  || loading ? <Spinner/> : <Fragment>\n        <Link to='/profiles' className='btn btn-light'>\n            Back to profiles\n          </Link>\n          {auth.isAuthenticated && auth.loading === false && auth.user._id !== profile.user._id && (<Label onClick={() => addProfile(friendID)} id='add_friend' className='btn btn-dark'>Add friend</Label>)}\n          <div className = \"profile-grid my-1\">\n          <ProfileTop profile={profile}/>\n          <ProfileAbout profile={profile}/>\n          <Posts profile={profile}/>\n          </div>\n        </Fragment>\n      }</Fragment>\n    );\n};\n\n\nProfile.ropTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {getProfileById, addProfile})(Profile)\n"]},"metadata":{},"sourceType":"module"}