{"ast":null,"code":"var _jsxFileName = \"/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/components/dashboard/posts.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PostForm from './PostForm';\nimport { getPosts } from '../../actions/profile'; //import { connect } from 'react-redux';\n\n/*\nconst Post = ({ post }) => {\n  const posts = post.map(post => (\n    <div key={post.id} className={'post'}>\n      <p> {post.name} </p>\n      <p> {post.text} </p>\n    </div>\n  ));\n\n  return (\n    <Fragment>\n      <div>\n        {posts}\n      </div>\n    </Fragment>\n\n\n\n  )\n}\n*/\n\nconst Posts = ({\n  profile: {\n    posts,\n    user,\n    _id\n  },\n  isAuthenticated,\n  loading,\n  getPosts\n}) => {\n  useEffect(() => {\n    {\n      posts === null ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Damn!\") : posts.map(post => React.createElement(\"div\", {\n        key: post._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post bg-white p-1 my-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"profile.html\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"round-img\",\n        src: post.avatar,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, post.name))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"my-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, post.text), React.createElement(\"p\", {\n        className: \"post-date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Posted on \", post.date)))));\n    }\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Posts\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, isAuthenticated && React.createElement(PostForm, {\n    profileId: _id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })));\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  getProfileById: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  posts: state.posts\n});\n\nexport default connect(mapStateToProps)(Posts);","map":{"version":3,"sources":["/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/components/dashboard/posts.js"],"names":["React","Fragment","useEffect","PropTypes","Link","Redirect","connect","PostForm","getPosts","Posts","profile","posts","user","_id","isAuthenticated","loading","map","post","avatar","name","text","date","propTypes","func","isRequired","getProfileById","array","bool","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAQC,QAAR,MAAsB,YAAtB;AACA,SAAQC,QAAR,QAAuB,uBAAvB,C,CACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAqBA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,GAAT;AAA6BC,EAAAA,eAA7B;AAA8CC,EAAAA,OAA9C;AAAuDP,EAAAA;AAAvD,CAAD,KAAsE;AAChFN,EAAAA,SAAS,CAAC,MAAM;AAEd;AAACS,MAAAA,KAAK,KAAK,IAAV,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAlB,GACCA,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAK;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACJ,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEjB;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAG,QAAA,IAAI,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACA,QAAA,SAAS,EAAC,WADV;AAEA,QAAA,GAAG,EAAGI,IAAI,CAACC,MAFX;AAGA,QAAA,GAAG,EAAC,EAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAI,CAACE,IAAV,CANA,CADA,CADA,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCF,IAAI,CAACG,IADN,CADA,EAIA;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACWH,IAAI,CAACI,IADhB,CAJA,CAXA,CAFiB,CAAnB,CADD;AAwBI;AACN,GA3BQ,CAAT;AA4BF,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,EACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,EAEA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCP,eAAe,IACd,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAGD,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFA,CADF;AAWD,CAxCD;;AA0CAJ,KAAK,CAACa,SAAN,GAAkB;AAChBd,EAAAA,QAAQ,EAAEL,SAAS,CAACoB,IAAV,CAAeC,UADT;AAEhBC,EAAAA,cAAc,EAAEtB,SAAS,CAACoB,IAAV,CAAeC,UAFf;AAGhBb,EAAAA,KAAK,EAAER,SAAS,CAACuB,KAAV,CAAgBF,UAHP;AAIhBV,EAAAA,eAAe,EAAEX,SAAS,CAACwB;AAJX,CAAlB;;AAOA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCf,EAAAA,eAAe,EAAEe,KAAK,CAACC,IAAN,CAAWhB,eADI;AAEhCH,EAAAA,KAAK,EAAEkB,KAAK,CAAClB;AAFmB,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACsB,eAAD,CAAP,CAAyBnB,KAAzB,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport  PostForm from './PostForm';\nimport {getPosts} from '../../actions/profile';\n//import { connect } from 'react-redux';\n/*\nconst Post = ({ post }) => {\n  const posts = post.map(post => (\n    <div key={post.id} className={'post'}>\n      <p> {post.name} </p>\n      <p> {post.text} </p>\n    </div>\n  ));\n\n  return (\n    <Fragment>\n      <div>\n        {posts}\n      </div>\n    </Fragment>\n\n\n\n  )\n}\n*/\nconst Posts = ({profile:{posts, user, _id}, isAuthenticated, loading, getPosts}) => {\n    useEffect(() => {\n      \n      {posts === null ? (<p>Damn!</p>):(\n        posts.map(post => (<div key={post._id}>\n\n          <div className=\"post bg-white p-1 my-1\">\n          <div>\n          <a href=\"profile.html\">\n          <img\n          className=\"round-img\"\n          src= {post.avatar}\n          alt=\"\"\n          />\n          <h4>{post.name}</h4>\n          </a>\n          </div>\n          <div>\n          <p className=\"my-1\">\n          {post.text}\n          </p>\n          <p className=\"post-date\">\n          Posted on {post.date}\n          </p>\n          </div>\n          </div>\n          </div>)\n        ))}\n    });\n  return(\n    <Fragment>\n    <h1>Posts</h1><br/>\n    <div className=\"posts\">\n    {isAuthenticated &&(\n      <PostForm profileId ={_id}/>\n    )}\n\n    </div>\n    </Fragment>\n  );\n}\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  getProfileById: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  posts: state.posts\n});\n\nexport default connect(mapStateToProps)(Posts);\n"]},"metadata":{},"sourceType":"module"}