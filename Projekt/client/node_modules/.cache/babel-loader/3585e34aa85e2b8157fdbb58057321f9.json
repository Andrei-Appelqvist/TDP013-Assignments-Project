{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, GET_PROFILES, GET_POSTS } from './types'; //Get current user profile\n\nexport const getCurrentProfile = history => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    history.push('/dashboard');\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('/api/profile/');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get profile by ID\n\nexport const getProfileById = userId => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get(\"/api/profile/user/\".concat(userId));\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get posts\n\nexport const getPosts = profileId => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get(\"/api/profile//post/\".concat(profileId));\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Create profile\n\nexport const createProfile = (formData = {}, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('api/profile', {}, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Profile Created'), 'success');\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","GET_PROFILES","GET_POSTS","getCurrentProfile","history","dispatch","res","get","type","payload","data","push","err","msg","response","statusText","status","getProfiles","getProfileById","userId","getPosts","profileId","createProfile","formData","edit","config","headers","post","errors","forEach","error"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {setAlert} from './alert';\n\nimport{\n  GET_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  GET_PROFILES,\n  GET_POSTS\n}from './types';\n\n\n//Get current user profile\nexport const getCurrentProfile = (history) => async dispatch => {\n  try{\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    history.push('/dashboard');\n  }catch(err){\n    dispatch({\n      type: PROFILE_ERROR,\n      payload:{msg: err.response.statusText, status: err.response.status}\n    });\n  }\n};\n//Get all profiles\nexport const getProfiles = () => async dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n\n  try {\n    const res = await axios.get('/api/profile/');\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Get profile by ID\nexport const getProfileById = userId => async dispatch => {\n  dispatch({type: CLEAR_PROFILE});\n  try{\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  }catch(err){\n    dispatch({\n      type: PROFILE_ERROR,\n      payload:{msg: err.response.statusText, status: err.response.status}\n    });\n  }\n};\n\n//Get posts\nexport const getPosts = profileId => async dispatch => {\n  dispatch({type: CLEAR_PROFILE});\n  try{\n    const res = await axios.get(`/api/profile//post/${profileId}`);\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  }catch(err){\n    dispatch({\n      type: PROFILE_ERROR,\n      payload:{msg: err.response.statusText, status: err.response.status}\n    });\n  }\n};\n\n//Create profile\nexport const createProfile = (formData = {}, history, edit = false) => async dispatch => {\n  try{\n    const config = {\n      headers:{\n        'Content-Type':'application/json'\n      }\n    }\n\n    const res = await axios.post('api/profile', {}, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Profile Created'),'success');\n    history.push('/dashboard');\n  }catch(err){\n    const errors = err.response.data.errors;\n    if(errors){\n      errors.forEach(error=> dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload:{msg: err.response.statusText, status: err.response.status}\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}