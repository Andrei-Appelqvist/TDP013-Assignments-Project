{"ast":null,"code":"var _jsxFileName = \"/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/components/dashboard/posts.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; //import { connect } from 'react-redux';\n\n/*\nconst Post = ({ post }) => {\n  const posts = post.map(post => (\n    <div key={post.id} className={'post'}>\n      <p> {post.name} </p>\n      <p> {post.text} </p>\n    </div>\n  ));\n\n  return (\n    <Fragment>\n      <div>\n        {posts}\n      </div>\n    </Fragment>\n\n\n\n  )\n}\n*/\n\nconst Posts = ({\n  profile: {\n    posts,\n    user\n  },\n  auth\n}) => {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Posts\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, auth.isAuthenticated && auth.loading === false ? React.createElement(\"div\", {\n    class: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    class: \"form my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    name: \"text\",\n    cols: \"30\",\n    rows: \"5\",\n    placeholder: \"Create a post\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    class: \"btn btn-dark my-1\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), posts === null ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Damn!\") : posts.map(post => React.createElement(\"div\", {\n    key: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"post bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"profile.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    class: \"round-img\",\n    src: user.avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, user.name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    class: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, post.text), React.createElement(\"p\", {\n    class: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Posted on \", post.date)))))));\n};\n\nPosts.propTypes = {\n  posts: PropTypes.array.isRequired,\n  auth: PropTypes.object.isRequired\n};\nexport default connect()(Posts);","map":{"version":3,"sources":["/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/components/dashboard/posts.js"],"names":["React","Fragment","PropTypes","connect","Posts","profile","posts","user","auth","isAuthenticated","loading","map","post","_id","avatar","name","text","date","propTypes","array","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAqBA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAT;AAAwBC,EAAAA;AAAxB,CAAD,KAAmC;AAC/C,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,EACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,EAEA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,IAAI,CAACC,eAAL,IAAwBD,IAAI,CAACE,OAAL,KAAiB,KAAzC,GAAsD;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC/C;AAAM,IAAA,KAAK,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,IAAI,EAAC,GAHP;AAIE,IAAA,WAAW,EAAC,eAJd;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,mBAA3B;AAA+C,IAAA,KAAK,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAD+C,CAAtD,GAWc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZf,EAeGJ,KAAK,KAAK,IAAV,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAlB,GACCA,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAK;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEjB;AAAK,IAAA,KAAK,EAAC,wBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,GAAG,EAAGN,IAAI,CAACO,MAFb;AAGE,IAAA,GAAG,EAAC,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,IAAI,CAACQ,IAAV,CANF,CADF,CADG,EAWH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACI,IADR,CADF,EAIG;AAAG,IAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcJ,IAAI,CAACK,IADnB,CAJH,CAXG,CAFiB,CAAnB,CAhBJ,CAFA,CADF;AA+CD,CAhDD;;AAkDAb,KAAK,CAACc,SAAN,GAAkB;AAChBZ,EAAAA,KAAK,EAAEJ,SAAS,CAACiB,KAAV,CAAgBC,UADP;AAEhBZ,EAAAA,IAAI,EAAEN,SAAS,CAACmB,MAAV,CAAiBD;AAFP,CAAlB;AAKA,eAAejB,OAAO,GAAGC,KAAH,CAAtB","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n//import { connect } from 'react-redux';\n/*\nconst Post = ({ post }) => {\n  const posts = post.map(post => (\n    <div key={post.id} className={'post'}>\n      <p> {post.name} </p>\n      <p> {post.text} </p>\n    </div>\n  ));\n\n  return (\n    <Fragment>\n      <div>\n        {posts}\n      </div>\n    </Fragment>\n\n\n\n  )\n}\n*/\nconst Posts = ({profile:{posts, user}, auth}) => {\n  return(\n    <Fragment>\n    <h1>Posts</h1><br/>\n    <div className=\"posts\">\n    {auth.isAuthenticated && auth.loading === false ? (    <div class=\"post-form\">\n            <form class=\"form my-1\">\n              <textarea\n                name=\"text\"\n                cols=\"30\"\n                rows=\"5\"\n                placeholder=\"Create a post\"\n                required\n              ></textarea>\n              <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\n            </form>\n          </div>):(<div></div>)}\n\n\n      {posts === null ? (<p>Damn!</p>):(\n        posts.map(post => (<div key={post._id}>\n\n          <div class=\"post bg-white p-1 my-1\">\n       <div>\n         <a href=\"profile.html\">\n           <img\n             class=\"round-img\"\n             src= {user.avatar}\n             alt=\"\"\n           />\n           <h4>{user.name}</h4>\n         </a>\n       </div>\n       <div>\n         <p class=\"my-1\">\n           {post.text}\n         </p>\n          <p class=\"post-date\">\n             Posted on {post.date}\n         </p>\n         </div>\n         </div>\n          </div>)\n      ))}\n\n    </div>\n    </Fragment>\n  );\n}\n\nPosts.propTypes = {\n  posts: PropTypes.array.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nexport default connect()(Posts)\n"]},"metadata":{},"sourceType":"module"}