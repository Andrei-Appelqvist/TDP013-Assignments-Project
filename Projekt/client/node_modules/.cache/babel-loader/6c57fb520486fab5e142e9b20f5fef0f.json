{"ast":null,"code":"var _jsxFileName = \"/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/components/profile/Profile.js\";\nimport PropTypes from 'prop-types';\nimport React, { Fragment, useEffect } from 'react';\nimport Spinner from '../layout/Spinner';\nimport { connect } from 'react-redux';\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"profile\"));\n};\n\nProfile.ropTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/components/profile/Profile.js"],"names":["PropTypes","React","Fragment","useEffect","Spinner","connect","getProfileById","Profile","profile","loading","auth","match","params","id","ropTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAACD,EAAAA,cAAD;AAAiBE,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAA1B;AAA8CC,EAAAA,IAA9C;AAAmDC,EAAAA;AAAnD,CAAD,KAA+D;AAC7ER,EAAAA,SAAS,CAAC,MAAK;AACbG,IAAAA,cAAc,CAACK,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEP,CAACP,cAAD,CAFO,CAAT;AAIA,SAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFE,OAAO,KAAK,IAAZ,IAAqBC,OAArB,GAA+B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,GAA4C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAD1C,CAAP;AAGD,CARD;;AAWAF,OAAO,CAACO,QAAR,GAAmB;AACjBR,EAAAA,cAAc,EAAEN,SAAS,CAACe,IAAV,CAAeC,UADd;AAEjBR,EAAAA,OAAO,EAAER,SAAS,CAACiB,MAAV,CAAiBD,UAFT;AAGjBN,EAAAA,IAAI,EAAEV,SAAS,CAACiB,MAAV,CAAiBD;AAHN,CAAnB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,OAAO,EAAEW,KAAK,CAACX,OADiB;AAEhCE,EAAAA,IAAI,EAAES,KAAK,CAACT;AAFoB,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACa,eAAD,EAAkB;AAACZ,EAAAA;AAAD,CAAlB,CAAP,CAA2CC,OAA3C,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, {Fragment, useEffect} from 'react';\nimport Spinner from '../layout/Spinner';\nimport {connect} from 'react-redux';\nimport {getProfileById} from '../../actions/profile';\n\n\nconst Profile = ({getProfileById, profile :{profile, loading}, auth,match}) => {\n  useEffect(()=> {\n    getProfileById(match.params.id);\n  },[getProfileById]);\n\n  return <Fragment>\n      {profile === null  || loading ? <Spinner/> : <Fragment>profile</Fragment>\n      }</Fragment>;\n}\n\n\nProfile.ropTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {getProfileById})(Profile)\n"]},"metadata":{},"sourceType":"module"}