{"ast":null,"code":"import _defineProperty from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/andmo435/Desktop/Github/TDP013-Assignments-Project/Projekt/client/src/components/auth/Register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //import axios from 'axios';\n\nimport { Container, Col, FormGroup, Label } from 'reactstrap';\n\nconst Register = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  //hook\n  const _useState = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1]; //Destrukturera\n\n\n  const name = formData.name,\n        email = formData.email,\n        password = formData.password,\n        password2 = formData.password2;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Passwords dont match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  if (isAuthenticated) {\n    return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"Login-info-box col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" Registration \"), React.createElement(\"form\", {\n    className: \"login-form\",\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" Name \"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"username_input\",\n    name: \"name\",\n    placeholder: \"Enter Your Name\",\n    value: name,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" Email Adress\"), React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email_input\",\n    name: \"email\",\n    placeholder: \"Enter Your Email Adress\",\n    value: email,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \" Password \"), React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password1_input\",\n    name: \"password\",\n    placeholder: \"Enter Your Password\",\n    value: password,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \" Confirm Password \"), React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password2_input\",\n    name: \"password2\",\n    value: password2,\n    onChange: e => onChange(e),\n    placeholder: \"Enter Your Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))), React.createElement(\"input\", {\n    type: \"submit\",\n    id: \"submit_button\",\n    className: \"btn btn-primary\",\n    value: \"Register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))));\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n}); //Connect takes state you want to map and the object with actions you want to use\n//To be able to access props.setAlert\n\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);","map":{"version":3,"sources":["/home/andmo435/Desktop/Github/TDP013-Assignments-Project/Projekt/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","connect","Redirect","setAlert","register","PropTypes","Container","Col","FormGroup","Label","Register","isAuthenticated","name","email","password","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport {setAlert} from '../../actions/alert';\nimport {register} from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import axios from 'axios';\nimport {\n  Container, Col, FormGroup, Label\n} from 'reactstrap';\n\nconst Register = ({setAlert, register, isAuthenticated}) => {\n  //hook\n  const[formData, setFormData] = useState({\n    name:'',\n    email:'',\n    password:'',\n    password2:''\n  });\n\n  //Destrukturera\n  const {name, email, password, password2} = formData;\n\n  const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\n  const onSubmit = async e => {\n    e.preventDefault();\n    if(password !== password2){\n      setAlert('Passwords dont match', 'danger');\n    }\n    else{\n      register({name, email, password});\n    }\n  };\n\n  if(isAuthenticated) {\n    return <Redirect to='/dashboard'/>;\n  }\n  return(\n    <Fragment>\n    <Container className=\"Login-info-box col-sm-6\">\n            <h1> Registration </h1>\n            <form className=\"login-form\" onSubmit ={e => onSubmit(e)}>\n              <Col>\n              <FormGroup>\n                <Label> Name </Label>\n                <input type=\"text\" id='username_input' name=\"name\" placeholder=\"Enter Your Name\" value={name} onChange={e => onChange(e)} />\n              </FormGroup>\n              </Col>\n              <Col>\n              <FormGroup>\n                <Label> Email Adress</Label>\n                <input type=\"email\" id='email_input' name=\"email\" placeholder=\"Enter Your Email Adress\" value={email} onChange={e => onChange(e)} />\n              </FormGroup>\n              </Col>\n              <Col>\n              <FormGroup>\n                <Label> Password </Label>\n                <input type=\"password\" id='password1_input' name=\"password\"  placeholder=\"Enter Your Password\" value={password} onChange={e => onChange(e)} />\n              </FormGroup>\n              </Col>\n              <Col>\n              <FormGroup>\n                <Label> Confirm Password </Label>\n                <input type=\"password\" id='password2_input' name=\"password2\"  value={password2} onChange={e => onChange(e)} placeholder=\"Enter Your Password\" />\n              </FormGroup>\n              </Col>\n              <input type=\"submit\" id='submit_button' className=\"btn btn-primary\" value=\"Register\"/>\n            </form>\n\n          </Container>\n    </Fragment>\n\n  )\n}\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\n\n//Connect takes state you want to map and the object with actions you want to use\n//To be able to access props.setAlert\nexport default connect(mapStateToProps, {setAlert, register})(Register);\n"]},"metadata":{},"sourceType":"module"}