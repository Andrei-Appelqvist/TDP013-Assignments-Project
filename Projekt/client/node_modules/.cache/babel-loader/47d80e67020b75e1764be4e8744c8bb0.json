{"ast":null,"code":"var _jsxFileName = \"/home/alexander/tdp013/Projekt/client/src/components/profile/Profile.js\";\nimport PropTypes from 'prop-types';\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport { connect } from 'react-redux';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport { getProfileById, addProfile } from '../../actions/profile';\nimport Posts from '../dashboard/posts';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, profile === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Back to profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id !== profile.user._id && React.createElement(Link, {\n    to: \"/dashboard\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Add friend\"), React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(ProfileTop, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(ProfileAbout, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Posts, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))));\n};\n\nProfile.ropTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/home/alexander/tdp013/Projekt/client/src/components/profile/Profile.js"],"names":["PropTypes","React","Fragment","useEffect","Link","Spinner","connect","ProfileTop","ProfileAbout","getProfileById","addProfile","Posts","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","ropTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,cAAR,EAAwBC,UAAxB,QAAyC,uBAAzC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAIA,MAAMC,OAAO,GAAG,CAAC;AAACH,EAAAA,cAAD;AAAiBI,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAA1B;AAA8CC,EAAAA,IAA9C;AAAoDC,EAAAA;AAApD,CAAD,KAAgE;AAC9Eb,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEP,CAACT,cAAD,EAAiBO,KAAK,CAACC,MAAN,CAAaC,EAA9B,CAFO,CAAT;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,KAAK,IAAZ,IAAqBC,OAArB,GAA+B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,GAA4C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC3C,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAD2C,EAIxCC,IAAI,CAACI,eAAL,IAAwBJ,IAAI,CAACD,OAAL,KAAiB,KAAzC,IAAkDC,IAAI,CAACK,IAAL,CAAUC,GAAV,KAAkBR,OAAO,CAACO,IAAR,CAAaC,GAAjF,IAAyF,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,YAAT;AAAsB,IAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJjD,EAKzC;AAAK,IAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAER,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEA,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CALyC,CAD/C,CADF;AAeD,CApBD;;AAuBAD,OAAO,CAACU,QAAR,GAAmB;AACjBb,EAAAA,cAAc,EAAET,SAAS,CAACuB,IAAV,CAAeC,UADd;AAEjBX,EAAAA,OAAO,EAAEb,SAAS,CAACyB,MAAV,CAAiBD,UAFT;AAGjBT,EAAAA,IAAI,EAAEf,SAAS,CAACyB,MAAV,CAAiBD;AAHN,CAAnB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,OAAO,EAAEc,KAAK,CAACd,OADiB;AAEhCE,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AAFoB,CAAL,CAA7B;;AAKA,eAAeT,OAAO,CAACoB,eAAD,EAAkB;AAACjB,EAAAA;AAAD,CAAlB,CAAP,CAA2CG,OAA3C,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, {Fragment, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport {connect} from 'react-redux';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport {getProfileById, addProfile} from '../../actions/profile';\nimport Posts from '../dashboard/posts';\n\n\n\nconst Profile = ({getProfileById, profile :{profile, loading}, auth, match}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  },[getProfileById, match.params.id]);\n\n  return (\n    <Fragment>\n      {profile === null  || loading ? <Spinner/> : <Fragment>\n        <Link to='/profiles' className='btn btn-light'>\n            Back to profiles\n          </Link>\n          {auth.isAuthenticated && auth.loading === false && auth.user._id !== profile.user._id && (<Link to='/dashboard' className='btn btn-dark'>Add friend</Link>)}\n          <div className = \"profile-grid my-1\">\n          <ProfileTop profile={profile}/>\n          <ProfileAbout profile={profile}/>\n          <Posts profile={profile}/>\n          </div>\n        </Fragment>\n      }</Fragment>\n    );\n};\n\n\nProfile.ropTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {getProfileById})(Profile)\n"]},"metadata":{},"sourceType":"module"}