{"ast":null,"code":"var _jsxFileName = \"/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/components/dashboard/posts.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux'; //import { connect } from 'react-redux';\n\n/*\nconst Post = ({ post }) => {\n  const posts = post.map(post => (\n    <div key={post.id} className={'post'}>\n      <p> {post.name} </p>\n      <p> {post.text} </p>\n    </div>\n  ));\n\n  return (\n    <Fragment>\n      <div>\n        {posts}\n      </div>\n    </Fragment>\n\n\n\n  )\n}\n*/\n\nconst Posts = ({\n  profile: {\n    posts,\n    user\n  },\n  isAuthenticated,\n  loading\n}) => {\n  const onChange = e => {};\n\n  const onSubmit = async e => {\n    e.preventDefault();\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Posts\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, isAuthenticated && React.createElement(\"div\", {\n    className: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    name: \"text\",\n    cols: \"30\",\n    rows: \"5\",\n    placeholder: \"Create a post\",\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    onSubmit: e => onSubmit(e),\n    className: \"btn btn-dark my-1\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))), posts === null ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Damn!\") : posts.map(post => React.createElement(\"div\", {\n    key: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"profile.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"round-img\",\n    src: user.avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, user.name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, post.text), React.createElement(\"p\", {\n    className: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Posted on \", post.date)))))));\n};\n\nPosts.propTypes = {\n  posts: PropTypes.array.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Posts);","map":{"version":3,"sources":["/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/components/dashboard/posts.js"],"names":["React","Fragment","PropTypes","Link","Redirect","connect","Posts","profile","posts","user","isAuthenticated","loading","onChange","e","onSubmit","preventDefault","map","post","_id","avatar","name","text","date","propTypes","array","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n//import { connect } from 'react-redux';\n/*\nconst Post = ({ post }) => {\n  const posts = post.map(post => (\n    <div key={post.id} className={'post'}>\n      <p> {post.name} </p>\n      <p> {post.text} </p>\n    </div>\n  ));\n\n  return (\n    <Fragment>\n      <div>\n        {posts}\n      </div>\n    </Fragment>\n\n\n\n  )\n}\n*/\nconst Posts = ({profile:{posts, user}, isAuthenticated, loading}) => {\n  const onChange = e => {};\n  const onSubmit = async e => {\n    e.preventDefault();\n\n  };\n  return(\n    <Fragment>\n    <h1>Posts</h1><br/>\n    <div className=\"posts\">\n    {isAuthenticated &&(\n\n    <div className=\"post-form\">\n\n        <form className=\"form my-1\">\n          <textarea\n            name=\"text\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Create a post\"\n            onChange={e => onChange(e)}\n            required\n          ></textarea>\n          <input type=\"submit\" onSubmit ={e => onSubmit(e)} className=\"btn btn-dark my-1\" value=\"Submit\" />\n        </form>\n      </div>\n    )}\n\n      {posts === null ? (<p>Damn!</p>):(\n        posts.map(post => (<div key={post._id}>\n\n          <div className=\"post bg-white p-1 my-1\">\n       <div>\n         <a href=\"profile.html\">\n           <img\n             className=\"round-img\"\n             src= {user.avatar}\n             alt=\"\"\n           />\n           <h4>{user.name}</h4>\n         </a>\n       </div>\n       <div>\n         <p className=\"my-1\">\n           {post.text}\n         </p>\n          <p className=\"post-date\">\n             Posted on {post.date}\n         </p>\n         </div>\n         </div>\n          </div>)\n      ))}\n\n    </div>\n    </Fragment>\n  );\n}\n\nPosts.propTypes = {\n  posts: PropTypes.array.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Posts);\n"]},"metadata":{},"sourceType":"module"}