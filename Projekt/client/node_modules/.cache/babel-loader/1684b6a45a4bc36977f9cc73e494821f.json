{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from './types';\n\nconst _register = register = async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify(newUser);\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n},\n      name = _register.name,\n      email = _register.email,\n      password = _register.password;\n\nexport { name, email, password };","map":{"version":3,"sources":["/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","register","dispatch","config","headers","body","JSON","stringify","newUser","res","post","type","payload","data","err","errors","response","forEach","error","msg","name","email","password"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAOC,QAAP,QAAsB,SAAtB;AACA,SACEC,gBADF,EAEEC,aAFF,QAGQ,SAHR;;kBAKsCC,QAAQ,GAAG,MAAMC,QAAN,IAAkB;AACjE,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAC;AACN,sBAAe;AADT;AADK,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeC,OAAf,CAAb;;AAEA,MAAG;AACD,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAW,YAAX,EAAyBL,IAAzB,EAA+BF,MAA/B,CAAlB;AACAD,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEZ,gBADC;AAEPa,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAND,CAMC,OAAMC,GAAN,EAAU;AACT,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AACA,QAAGA,MAAH,EAAU;AACRA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAGhB,QAAQ,CAACJ,QAAQ,CAACoB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAA/B;AACD;;AACDjB,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;AAGD;AACF,C;MAxBaoB,I,aAAAA,I;MAAMC,K,aAAAA,K;MAAOC,Q,aAAAA,Q","sourcesContent":["import axios from 'axios';\nimport{setAlert} from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n}  from './types';\n\nexport const {name, email, password}= register = async dispatch => {\n  const config = {\n    headers:{\n      'Content-Type':'application/json'\n    }\n  }\n\n  const body = JSON.stringify(newUser);\n\n  try{\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  }catch(err){\n    const errors = err.response.data.errors;\n    if(errors){\n      errors.forEach(error=> dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}