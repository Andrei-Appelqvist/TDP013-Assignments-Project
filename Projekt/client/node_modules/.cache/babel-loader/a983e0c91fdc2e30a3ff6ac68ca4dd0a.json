{"ast":null,"code":"var _jsxFileName = \"/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/components/dashboard/Dashboard.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  });\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getCurrentProfile","Dashboard","auth","user","profile","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACD,EAAAA,iBAAD;AAAoBE,EAAAA,IAAI,EAAC;AAACC,IAAAA;AAAD,GAAzB;AAAiCC,EAAAA,OAAO,EAAC;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV;AAAzC,CAAD,KAAkE;AAClFT,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOK,OAAO,IAAID,OAAO,KAAK,IAAvB,GAA8B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,GAA2C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlD;AAGD,CARD;;AAUAH,SAAS,CAACK,SAAV,GAAsB;AACpBN,EAAAA,iBAAiB,EAAEH,SAAS,CAACU,IAAV,CAAeC,UADd;AAEpBN,EAAAA,IAAI,EAAEL,SAAS,CAACY,MAAV,CAAiBD,UAFH;AAGpBJ,EAAAA,OAAO,EAAEP,SAAS,CAACY,MAAV,CAAiBD;AAHN,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCT,EAAAA,IAAI,EAAES,KAAK,CAACT,IADoB;AAEhCE,EAAAA,OAAO,EAAEO,KAAK,CAACP;AAFiB,CAAL,CAA7B;;AAMA,eAAeN,OAAO,CAACY,eAAD,EAAkB;AAACV,EAAAA;AAAD,CAAlB,CAAP,CAA8CC,SAA9C,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport {getCurrentProfile} from '../../actions/profile';\n\n\nconst Dashboard = ({getCurrentProfile, auth:{user}, profile:{profile, loading}}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n\n  return loading && profile === null ? <Spinner/> : <Fragment>\n\n  </Fragment>;\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\n\nexport default connect(mapStateToProps, {getCurrentProfile})(Dashboard);\n"]},"metadata":{},"sourceType":"module"}