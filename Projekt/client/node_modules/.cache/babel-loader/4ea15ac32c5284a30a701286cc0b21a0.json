{"ast":null,"code":"var _jsxFileName = \"/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/components/dashboard/Dashboard.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\nimport { compose } from 'react-apollo';\nimport Posts from './posts';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  return loading && profile === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), \" Welcome \", user && user.name), profile !== null ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"has\") : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"has\"), React.createElement(Posts, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default compose(withRouter, connect(mapStateToProps, {\n  getCurrentProfile\n}))(Dashboard);","map":{"version":3,"sources":["/home/andmo435/Desktop/TDP013/gittat/Projekt/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","withRouter","PropTypes","connect","Spinner","getCurrentProfile","compose","Posts","Dashboard","auth","user","profile","loading","name","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACH,EAAAA,iBAAD;AAAoBI,EAAAA,IAAI,EAAC;AAACC,IAAAA;AAAD,GAAzB;AAAiCC,EAAAA,OAAO,EAAC;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV;AAAzC,CAAD,KAAkE;AAClFZ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,iBAAiB;AAClB,GAFQ,EAEP,CAACA,iBAAD,CAFO,CAAT;AAIA,SAAOO,OAAO,IAAID,OAAO,KAAK,IAAvB,GAA8B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,GAA2C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAChD;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADgD,EAIhD;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,eAA6DD,IAAI,IAAIA,IAAI,CAACG,IAA1E,CAJgD,EAK/CF,OAAO,KAAK,IAAZ,GAAmB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAnB,GAA8C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALC,EAOhD,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAIA,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPgD,CAAlD;AASD,CAdD;;AAgBAH,SAAS,CAACM,SAAV,GAAsB;AACpBT,EAAAA,iBAAiB,EAAEH,SAAS,CAACa,IAAV,CAAeC,UADd;AAEpBP,EAAAA,IAAI,EAAEP,SAAS,CAACe,MAAV,CAAiBD,UAFH;AAGpBL,EAAAA,OAAO,EAAET,SAAS,CAACe,MAAV,CAAiBD;AAHN,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,IAAI,EAAEU,KAAK,CAACV,IADoB;AAEhCE,EAAAA,OAAO,EAAEQ,KAAK,CAACR;AAFiB,CAAL,CAA7B;;AAMA,eAAeL,OAAO,CAAEL,UAAF,EAAcE,OAAO,CAACe,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAArB,CAAP,CAAoEG,SAApE,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport {getCurrentProfile} from '../../actions/profile';\nimport {compose} from 'react-apollo';\nimport Posts from './posts';\n\n\nconst Dashboard = ({getCurrentProfile, auth:{user}, profile:{profile, loading}}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  },[getCurrentProfile]);\n\n  return loading && profile === null ? <Spinner/> : <Fragment>\n    <h1 className=\"large text-primary\">\n      Dashboard\n    </h1>\n    <p className=\"lead\"><i className=\"fas fa-user\"></i> Welcome {user && user.name}</p>\n    {profile !== null ? <Fragment>has</Fragment> : <Fragment>has\n    </Fragment>}\n    <Posts profile = {profile}/>\n  </Fragment>;\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\n\nexport default compose( withRouter, connect(mapStateToProps, {getCurrentProfile}))(Dashboard);\n"]},"metadata":{},"sourceType":"module"}