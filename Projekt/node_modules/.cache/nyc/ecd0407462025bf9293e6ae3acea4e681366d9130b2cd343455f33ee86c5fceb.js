var cov_150vpm3czg=function(){var path="/home/andmo435/Desktop/TDP013/gittat/Projekt/config/db.js";var hash="3ca0368e31642a0c949c6a25131a92bba5729f10";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/andmo435/Desktop/TDP013/gittat/Projekt/config/db.js",statementMap:{"0":{start:{line:1,column:17},end:{line:1,column:36}},"1":{start:{line:2,column:15},end:{line:2,column:32}},"2":{start:{line:3,column:11},end:{line:3,column:33}},"3":{start:{line:5,column:18},end:{line:14,column:1}},"4":{start:{line:6,column:2},end:{line:13,column:3}},"5":{start:{line:8,column:4},end:{line:8,column:127}},"6":{start:{line:9,column:4},end:{line:9,column:40}},"7":{start:{line:11,column:4},end:{line:11,column:29}},"8":{start:{line:12,column:4},end:{line:12,column:20}},"9":{start:{line:16,column:0},end:{line:16,column:27}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:18},end:{line:5,column:19}},loc:{start:{line:5,column:30},end:{line:14,column:1}},line:5}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"3ca0368e31642a0c949c6a25131a92bba5729f10"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const mongoose=(cov_150vpm3czg.s[0]++,require('mongoose'));const config=(cov_150vpm3czg.s[1]++,require('config'));const db=(cov_150vpm3czg.s[2]++,config.get('mongoURI'));cov_150vpm3czg.s[3]++;const connectDB=async()=>{cov_150vpm3czg.f[0]++;cov_150vpm3czg.s[4]++;try{cov_150vpm3czg.s[5]++;//returns promise so we want to wait
await mongoose.connect(db,{useNewUrlParser:true,useUnifiedTopology:true,useCreateIndex:true,useFindAndModify:false});cov_150vpm3czg.s[6]++;console.log('Connected to MongoDB');}catch(err){cov_150vpm3czg.s[7]++;console.log(err.message);cov_150vpm3czg.s[8]++;process.exit(1);}};cov_150vpm3czg.s[9]++;module.exports=connectDB;