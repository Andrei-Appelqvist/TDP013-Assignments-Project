var cov_21f5qnb439=function(){var path="/home/andmo435/Desktop/TDP013/gittat/Projekt/routes/api/auth.js";var hash="dc8ec2acb170faaba29cf4fa80fc39d38b31cdee";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/andmo435/Desktop/TDP013/gittat/Projekt/routes/api/auth.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:2,column:15},end:{line:2,column:31}},"2":{start:{line:3,column:13},end:{line:3,column:45}},"3":{start:{line:4,column:15},end:{line:4,column:34}},"4":{start:{line:5,column:13},end:{line:5,column:41}},"5":{start:{line:6,column:35},end:{line:6,column:63}},"6":{start:{line:7,column:12},end:{line:7,column:35}},"7":{start:{line:8,column:15},end:{line:8,column:32}},"8":{start:{line:13,column:0},end:{line:22,column:3}},"9":{start:{line:14,column:2},end:{line:21,column:3}},"10":{start:{line:16,column:17},end:{line:16,column:69}},"11":{start:{line:17,column:4},end:{line:17,column:19}},"12":{start:{line:19,column:4},end:{line:19,column:31}},"13":{start:{line:20,column:4},end:{line:20,column:41}},"14":{start:{line:27,column:0},end:{line:69,column:3}},"15":{start:{line:32,column:17},end:{line:32,column:38}},"16":{start:{line:33,column:2},end:{line:35,column:3}},"17":{start:{line:34,column:4},end:{line:34,column:58}},"18":{start:{line:37,column:27},end:{line:37,column:35}},"19":{start:{line:39,column:2},end:{line:67,column:3}},"20":{start:{line:40,column:15},end:{line:40,column:42}},"21":{start:{line:42,column:4},end:{line:44,column:5}},"22":{start:{line:43,column:6},end:{line:43,column:74}},"23":{start:{line:46,column:20},end:{line:46,column:65}},"24":{start:{line:47,column:4},end:{line:49,column:5}},"25":{start:{line:48,column:6},end:{line:48,column:74}},"26":{start:{line:51,column:20},end:{line:55,column:5}},"27":{start:{line:57,column:4},end:{line:61,column:7}},"28":{start:{line:59,column:8},end:{line:59,column:26}},"29":{start:{line:59,column:16},end:{line:59,column:26}},"30":{start:{line:60,column:8},end:{line:60,column:26}},"31":{start:{line:65,column:4},end:{line:65,column:31}},"32":{start:{line:66,column:4},end:{line:66,column:41}},"33":{start:{line:70,column:0},end:{line:70,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:21},end:{line:13,column:22}},loc:{start:{line:13,column:40},end:{line:22,column:1}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:31,column:2},end:{line:31,column:3}},loc:{start:{line:31,column:21},end:{line:69,column:1}},line:31},"2":{name:"(anonymous_2)",decl:{start:{line:58,column:4},end:{line:58,column:5}},loc:{start:{line:58,column:19},end:{line:61,column:5}},line:58}},branchMap:{"0":{loc:{start:{line:33,column:2},end:{line:35,column:3}},type:"if",locations:[{start:{line:33,column:2},end:{line:35,column:3}},{start:{line:33,column:2},end:{line:35,column:3}}],line:33},"1":{loc:{start:{line:42,column:4},end:{line:44,column:5}},type:"if",locations:[{start:{line:42,column:4},end:{line:44,column:5}},{start:{line:42,column:4},end:{line:44,column:5}}],line:42},"2":{loc:{start:{line:47,column:4},end:{line:49,column:5}},type:"if",locations:[{start:{line:47,column:4},end:{line:49,column:5}},{start:{line:47,column:4},end:{line:49,column:5}}],line:47},"3":{loc:{start:{line:59,column:8},end:{line:59,column:26}},type:"if",locations:[{start:{line:59,column:8},end:{line:59,column:26}},{start:{line:59,column:8},end:{line:59,column:26}}],line:59}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"dc8ec2acb170faaba29cf4fa80fc39d38b31cdee"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const express=(cov_21f5qnb439.s[0]++,require('express'));const router=(cov_21f5qnb439.s[1]++,express.Router());const auth=(cov_21f5qnb439.s[2]++,require('../../middleware/auth'));const bcrypt=(cov_21f5qnb439.s[3]++,require('bcryptjs'));const User=(cov_21f5qnb439.s[4]++,require('../../models/User'));const{check,validationResult}=(cov_21f5qnb439.s[5]++,require('express-validator'));const jwt=(cov_21f5qnb439.s[6]++,require('jsonwebtoken'));const config=(cov_21f5qnb439.s[7]++,require('config'));// @route GET api/auth
// @desc Test route
// @access public
cov_21f5qnb439.s[8]++;router.get('/',auth,async(req,res)=>{cov_21f5qnb439.f[0]++;cov_21f5qnb439.s[9]++;try{//Vill ej ge tillbaka lösenord
const user=(cov_21f5qnb439.s[10]++,await User.findById(req.user.id).select('-password'));cov_21f5qnb439.s[11]++;res.json(user);}catch(err){cov_21f5qnb439.s[12]++;console.error(err.message);cov_21f5qnb439.s[13]++;res.status(500).send('Server error');}});// @route POST api/auth
// @desc Authenticate user & get token
// @access public
cov_21f5qnb439.s[14]++;router.post('/',[check('email','Please include a valid email').isEmail(),check('password','Password is required').exists()],async(req,res)=>{cov_21f5qnb439.f[1]++;const errors=(cov_21f5qnb439.s[15]++,validationResult(req));cov_21f5qnb439.s[16]++;if(!errors.isEmpty()){cov_21f5qnb439.b[0][0]++;cov_21f5qnb439.s[17]++;return res.status(400).json({errors:errors.array()});}else{cov_21f5qnb439.b[0][1]++;}const{email,password}=(cov_21f5qnb439.s[18]++,req.body);cov_21f5qnb439.s[19]++;try{let user=(cov_21f5qnb439.s[20]++,await User.findOne({email}));cov_21f5qnb439.s[21]++;if(!user){cov_21f5qnb439.b[1][0]++;cov_21f5qnb439.s[22]++;return res.status(400).json({errors:[{msg:'Invalid credentials'}]});}else{cov_21f5qnb439.b[1][1]++;}const isMatch=(cov_21f5qnb439.s[23]++,await bcrypt.compare(password,user.password));cov_21f5qnb439.s[24]++;if(!isMatch){cov_21f5qnb439.b[2][0]++;cov_21f5qnb439.s[25]++;return res.status(400).json({errors:[{msg:'Invalid credentials'}]});}else{cov_21f5qnb439.b[2][1]++;}const payload=(cov_21f5qnb439.s[26]++,{user:{id:user.id}});//Sätt expires till mindre när allt är klart, högt värde för testning
cov_21f5qnb439.s[27]++;jwt.sign(payload,config.get('jwtSecret'),{expiresIn:999999},(err,token)=>{cov_21f5qnb439.f[2]++;cov_21f5qnb439.s[28]++;if(err){cov_21f5qnb439.b[3][0]++;cov_21f5qnb439.s[29]++;throw err;}else{cov_21f5qnb439.b[3][1]++;}cov_21f5qnb439.s[30]++;res.json({token});});}catch(err){cov_21f5qnb439.s[31]++;console.error(err.message);cov_21f5qnb439.s[32]++;res.status(500).send('Server error');}});cov_21f5qnb439.s[33]++;module.exports=router;