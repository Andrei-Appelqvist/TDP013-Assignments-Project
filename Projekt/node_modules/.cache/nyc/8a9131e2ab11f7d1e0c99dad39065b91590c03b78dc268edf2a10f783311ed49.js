var cov_ikkmmfygn=function(){var path="/home/andmo435/Desktop/TDP013/gittat/Projekt/routes/api/profile.js";var hash="35142af0bd65c6e65d572f41a88a63fa6147ffca";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/andmo435/Desktop/TDP013/gittat/Projekt/routes/api/profile.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:2,column:15},end:{line:2,column:31}},"2":{start:{line:3,column:13},end:{line:3,column:45}},"3":{start:{line:4,column:35},end:{line:4,column:63}},"4":{start:{line:5,column:16},end:{line:5,column:47}},"5":{start:{line:6,column:13},end:{line:6,column:41}},"6":{start:{line:7,column:16},end:{line:7,column:34}},"7":{start:{line:8,column:15},end:{line:8,column:32}},"8":{start:{line:9,column:15},end:{line:9,column:42}},"9":{start:{line:14,column:0},end:{line:27,column:3}},"10":{start:{line:15,column:2},end:{line:26,column:3}},"11":{start:{line:16,column:20},end:{line:16,column:96}},"12":{start:{line:18,column:4},end:{line:20,column:5}},"13":{start:{line:19,column:6},end:{line:19,column:79}},"14":{start:{line:22,column:4},end:{line:22,column:22}},"15":{start:{line:24,column:4},end:{line:24,column:31}},"16":{start:{line:25,column:4},end:{line:25,column:41}},"17":{start:{line:32,column:0},end:{line:54,column:3}},"18":{start:{line:33,column:17},end:{line:33,column:38}},"19":{start:{line:34,column:2},end:{line:36,column:3}},"20":{start:{line:35,column:4},end:{line:35,column:58}},"21":{start:{line:37,column:24},end:{line:37,column:26}},"22":{start:{line:38,column:2},end:{line:38,column:35}},"23":{start:{line:39,column:4},end:{line:53,column:5}},"24":{start:{line:41,column:20},end:{line:45,column:7}},"25":{start:{line:46,column:6},end:{line:46,column:25}},"26":{start:{line:47,column:6},end:{line:47,column:27}},"27":{start:{line:48,column:6},end:{line:48,column:24}},"28":{start:{line:51,column:6},end:{line:51,column:33}},"29":{start:{line:52,column:6},end:{line:52,column:43}},"30":{start:{line:59,column:0},end:{line:67,column:3}},"31":{start:{line:60,column:2},end:{line:66,column:3}},"32":{start:{line:61,column:21},end:{line:61,column:86}},"33":{start:{line:62,column:4},end:{line:62,column:23}},"34":{start:{line:64,column:4},end:{line:64,column:31}},"35":{start:{line:65,column:4},end:{line:65,column:41}},"36":{start:{line:72,column:0},end:{line:88,column:3}},"37":{start:{line:73,column:2},end:{line:87,column:3}},"38":{start:{line:74,column:20},end:{line:74,column:115}},"39":{start:{line:76,column:4},end:{line:78,column:5}},"40":{start:{line:77,column:6},end:{line:77,column:61}},"41":{start:{line:79,column:4},end:{line:79,column:22}},"42":{start:{line:82,column:4},end:{line:82,column:31}},"43":{start:{line:83,column:4},end:{line:85,column:5}},"44":{start:{line:84,column:6},end:{line:84,column:61}},"45":{start:{line:86,column:4},end:{line:86,column:41}},"46":{start:{line:93,column:0},end:{line:104,column:3}},"47":{start:{line:94,column:2},end:{line:103,column:3}},"48":{start:{line:96,column:4},end:{line:96,column:55}},"49":{start:{line:98,column:4},end:{line:98,column:51}},"50":{start:{line:99,column:4},end:{line:99,column:47}},"51":{start:{line:101,column:4},end:{line:101,column:31}},"52":{start:{line:102,column:4},end:{line:102,column:41}},"53":{start:{line:109,column:0},end:{line:147,column:2}},"54":{start:{line:120,column:19},end:{line:120,column:40}},"55":{start:{line:121,column:4},end:{line:123,column:5}},"56":{start:{line:122,column:6},end:{line:122,column:62}},"57":{start:{line:126,column:4},end:{line:145,column:5}},"58":{start:{line:127,column:19},end:{line:127,column:71}},"59":{start:{line:128,column:22},end:{line:128,column:59}},"60":{start:{line:130,column:25},end:{line:135,column:7}},"61":{start:{line:137,column:6},end:{line:137,column:40}},"62":{start:{line:139,column:6},end:{line:139,column:27}},"63":{start:{line:141,column:6},end:{line:141,column:30}},"64":{start:{line:143,column:6},end:{line:143,column:33}},"65":{start:{line:144,column:6},end:{line:144,column:43}},"66":{start:{line:153,column:0},end:{line:189,column:3}},"67":{start:{line:154,column:2},end:{line:188,column:3}},"68":{start:{line:155,column:20},end:{line:155,column:64}},"69":{start:{line:156,column:17},end:{line:158,column:5}},"70":{start:{line:157,column:14},end:{line:157,column:43}},"71":{start:{line:165,column:4},end:{line:167,column:5}},"72":{start:{line:166,column:6},end:{line:166,column:61}},"73":{start:{line:170,column:4},end:{line:172,column:5}},"74":{start:{line:171,column:6},end:{line:171,column:66}},"75":{start:{line:173,column:24},end:{line:175,column:33}},"76":{start:{line:174,column:19},end:{line:174,column:26}},"77":{start:{line:177,column:4},end:{line:177,column:41}},"78":{start:{line:179,column:4},end:{line:179,column:25}},"79":{start:{line:181,column:4},end:{line:181,column:28}},"80":{start:{line:183,column:4},end:{line:183,column:31}},"81":{start:{line:184,column:4},end:{line:186,column:5}},"82":{start:{line:185,column:6},end:{line:185,column:61}},"83":{start:{line:187,column:4},end:{line:187,column:41}},"84":{start:{line:195,column:0},end:{line:207,column:3}},"85":{start:{line:196,column:2},end:{line:206,column:3}},"86":{start:{line:197,column:4},end:{line:197,column:31}},"87":{start:{line:198,column:20},end:{line:198,column:57}},"88":{start:{line:199,column:4},end:{line:199,column:28}},"89":{start:{line:201,column:4},end:{line:201,column:31}},"90":{start:{line:202,column:4},end:{line:204,column:5}},"91":{start:{line:203,column:6},end:{line:203,column:61}},"92":{start:{line:205,column:4},end:{line:205,column:41}},"93":{start:{line:213,column:0},end:{line:238,column:3}},"94":{start:{line:214,column:2},end:{line:237,column:3}},"95":{start:{line:215,column:20},end:{line:215,column:61}},"96":{start:{line:216,column:17},end:{line:216,column:71}},"97":{start:{line:217,column:23},end:{line:221,column:5}},"98":{start:{line:222,column:4},end:{line:222,column:33}},"99":{start:{line:228,column:4},end:{line:228,column:28}},"100":{start:{line:229,column:4},end:{line:229,column:40}},"101":{start:{line:230,column:4},end:{line:230,column:33}},"102":{start:{line:231,column:4},end:{line:231,column:25}},"103":{start:{line:233,column:4},end:{line:233,column:30}},"104":{start:{line:235,column:4},end:{line:235,column:31}},"105":{start:{line:236,column:4},end:{line:236,column:41}},"106":{start:{line:239,column:0},end:{line:239,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:14,column:23},end:{line:14,column:24}},loc:{start:{line:14,column:42},end:{line:27,column:1}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:32,column:22},end:{line:32,column:23}},loc:{start:{line:32,column:40},end:{line:54,column:1}},line:32},"2":{name:"(anonymous_2)",decl:{start:{line:59,column:16},end:{line:59,column:17}},loc:{start:{line:59,column:36},end:{line:67,column:1}},line:59},"3":{name:"(anonymous_3)",decl:{start:{line:72,column:29},end:{line:72,column:30}},loc:{start:{line:72,column:49},end:{line:88,column:1}},line:72},"4":{name:"(anonymous_4)",decl:{start:{line:93,column:24},end:{line:93,column:25}},loc:{start:{line:93,column:44},end:{line:104,column:1}},line:93},"5":{name:"(anonymous_5)",decl:{start:{line:119,column:2},end:{line:119,column:3}},loc:{start:{line:119,column:22},end:{line:146,column:3}},line:119},"6":{name:"(anonymous_6)",decl:{start:{line:153,column:48},end:{line:153,column:49}},loc:{start:{line:153,column:66},end:{line:189,column:1}},line:153},"7":{name:"(anonymous_7)",decl:{start:{line:157,column:6},end:{line:157,column:7}},loc:{start:{line:157,column:14},end:{line:157,column:43}},line:157},"8":{name:"(anonymous_8)",decl:{start:{line:174,column:11},end:{line:174,column:12}},loc:{start:{line:174,column:19},end:{line:174,column:26}},line:174},"9":{name:"(anonymous_9)",decl:{start:{line:195,column:24},end:{line:195,column:25}},loc:{start:{line:195,column:44},end:{line:207,column:1}},line:195},"10":{name:"(anonymous_10)",decl:{start:{line:213,column:32},end:{line:213,column:33}},loc:{start:{line:213,column:52},end:{line:238,column:1}},line:213}},branchMap:{"0":{loc:{start:{line:18,column:4},end:{line:20,column:5}},type:"if",locations:[{start:{line:18,column:4},end:{line:20,column:5}},{start:{line:18,column:4},end:{line:20,column:5}}],line:18},"1":{loc:{start:{line:34,column:2},end:{line:36,column:3}},type:"if",locations:[{start:{line:34,column:2},end:{line:36,column:3}},{start:{line:34,column:2},end:{line:36,column:3}}],line:34},"2":{loc:{start:{line:76,column:4},end:{line:78,column:5}},type:"if",locations:[{start:{line:76,column:4},end:{line:78,column:5}},{start:{line:76,column:4},end:{line:78,column:5}}],line:76},"3":{loc:{start:{line:83,column:4},end:{line:85,column:5}},type:"if",locations:[{start:{line:83,column:4},end:{line:85,column:5}},{start:{line:83,column:4},end:{line:85,column:5}}],line:83},"4":{loc:{start:{line:121,column:4},end:{line:123,column:5}},type:"if",locations:[{start:{line:121,column:4},end:{line:123,column:5}},{start:{line:121,column:4},end:{line:123,column:5}}],line:121},"5":{loc:{start:{line:165,column:4},end:{line:167,column:5}},type:"if",locations:[{start:{line:165,column:4},end:{line:167,column:5}},{start:{line:165,column:4},end:{line:167,column:5}}],line:165},"6":{loc:{start:{line:170,column:4},end:{line:172,column:5}},type:"if",locations:[{start:{line:170,column:4},end:{line:172,column:5}},{start:{line:170,column:4},end:{line:172,column:5}}],line:170},"7":{loc:{start:{line:170,column:8},end:{line:170,column:89}},type:"binary-expr",locations:[{start:{line:170,column:8},end:{line:170,column:44}},{start:{line:170,column:48},end:{line:170,column:89}}],line:170},"8":{loc:{start:{line:184,column:4},end:{line:186,column:5}},type:"if",locations:[{start:{line:184,column:4},end:{line:186,column:5}},{start:{line:184,column:4},end:{line:186,column:5}}],line:184},"9":{loc:{start:{line:202,column:4},end:{line:204,column:5}},type:"if",locations:[{start:{line:202,column:4},end:{line:204,column:5}},{start:{line:202,column:4},end:{line:204,column:5}}],line:202}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"35142af0bd65c6e65d572f41a88a63fa6147ffca"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const express=(cov_ikkmmfygn.s[0]++,require('express'));const router=(cov_ikkmmfygn.s[1]++,express.Router());const auth=(cov_ikkmmfygn.s[2]++,require('../../middleware/auth'));const{check,validationResult}=(cov_ikkmmfygn.s[3]++,require('express-validator'));const Profile=(cov_ikkmmfygn.s[4]++,require('../../models/Profile'));const User=(cov_ikkmmfygn.s[5]++,require('../../models/User'));const request=(cov_ikkmmfygn.s[6]++,require('request'));const config=(cov_ikkmmfygn.s[7]++,require('config'));var ObjectId=(cov_ikkmmfygn.s[8]++,require('mongodb').ObjectID);// @route GET api/profile/me
// @desc GET current user profile
// @access private
cov_ikkmmfygn.s[9]++;router.get('/me',auth,async(req,res)=>{cov_ikkmmfygn.f[0]++;cov_ikkmmfygn.s[10]++;try{const profile=(cov_ikkmmfygn.s[11]++,await Profile.findOne({user:req.user.id}).populate('user',['name','avatar']));cov_ikkmmfygn.s[12]++;if(!profile){cov_ikkmmfygn.b[0][0]++;cov_ikkmmfygn.s[13]++;return res.status(400).json({msg:'There is no profile for this user'});}else{cov_ikkmmfygn.b[0][1]++;}cov_ikkmmfygn.s[14]++;res.json(profile);}catch(err){cov_ikkmmfygn.s[15]++;console.error(err.message);cov_ikkmmfygn.s[16]++;res.status(500).send('Server Error');}});// @route POST api/profile
// @desc Create or Update user profile
// @access private
cov_ikkmmfygn.s[17]++;router.post('/',auth,async(req,res)=>{cov_ikkmmfygn.f[1]++;const errors=(cov_ikkmmfygn.s[18]++,validationResult(req));cov_ikkmmfygn.s[19]++;if(!errors.isEmpty()){cov_ikkmmfygn.b[1][0]++;cov_ikkmmfygn.s[20]++;return res.status(400).json({errors:errors.array()});}else{cov_ikkmmfygn.b[1][1]++;}const profileFields=(cov_ikkmmfygn.s[21]++,{});cov_ikkmmfygn.s[22]++;profileFields.user=req.user.id;cov_ikkmmfygn.s[23]++;try{//Create
let profile=(cov_ikkmmfygn.s[24]++,await Profile.findOneAndUpdate({user:req.user.id},{$set:profileFields},{new:true,upsert:true}));cov_ikkmmfygn.s[25]++;profile.posts=[];cov_ikkmmfygn.s[26]++;profile.friends=[];cov_ikkmmfygn.s[27]++;res.json(profile);}catch(err){cov_ikkmmfygn.s[28]++;console.error(err.message);cov_ikkmmfygn.s[29]++;res.status(500).send('Server error');}});// @route GET api/profile
// @desc Get all profiles
// @access Public
cov_ikkmmfygn.s[30]++;router.get('/',async(req,res)=>{cov_ikkmmfygn.f[2]++;cov_ikkmmfygn.s[31]++;try{const profiles=(cov_ikkmmfygn.s[32]++,await Profile.find().populate('user',['name','avatar','email']));cov_ikkmmfygn.s[33]++;res.json(profiles);}catch(err){cov_ikkmmfygn.s[34]++;console.error(err.message);cov_ikkmmfygn.s[35]++;res.status(500).send('Server Error');}});// @route GET api/profile/user/:user_id
// @desc Get profile by user id
// @access Public
cov_ikkmmfygn.s[36]++;router.get('/user/:user_id',async(req,res)=>{cov_ikkmmfygn.f[3]++;cov_ikkmmfygn.s[37]++;try{const profile=(cov_ikkmmfygn.s[38]++,await Profile.findOne({user:req.params.user_id}).populate('user',['name','avatar','email']));cov_ikkmmfygn.s[39]++;if(!profile){cov_ikkmmfygn.b[2][0]++;cov_ikkmmfygn.s[40]++;return res.status(400).json({msg:'Profile not found'});}else{cov_ikkmmfygn.b[2][1]++;}cov_ikkmmfygn.s[41]++;res.json(profile);}catch(err){cov_ikkmmfygn.s[42]++;console.error(err.message);cov_ikkmmfygn.s[43]++;if(err.kind=='ObjectId'){cov_ikkmmfygn.b[3][0]++;cov_ikkmmfygn.s[44]++;return res.status(400).json({msg:'Profile not found'});}else{cov_ikkmmfygn.b[3][1]++;}cov_ikkmmfygn.s[45]++;res.status(500).send('Server Error');}});// @route Delete api/profile
// @desc Delete profile, user and posts
// @access Private
cov_ikkmmfygn.s[46]++;router.delete('/',auth,async(req,res)=>{cov_ikkmmfygn.f[4]++;cov_ikkmmfygn.s[47]++;try{cov_ikkmmfygn.s[48]++;//Remove profile
await Profile.findOneAndRemove({user:req.user.id});//Remove user
cov_ikkmmfygn.s[49]++;await User.findOneAndRemove({_id:req.user.id});cov_ikkmmfygn.s[50]++;res.json({msg:'User succesfully removed'});}catch(err){cov_ikkmmfygn.s[51]++;console.error(err.message);cov_ikkmmfygn.s[52]++;res.status(500).send('Server Error');}});// @route    POST api/profile/post/:profileid
// @desc     Add a post to a profile
// @access   Private
cov_ikkmmfygn.s[53]++;router.post('/post/:id',[auth,[check('text','Text is required').not().isEmpty()]],async(req,res)=>{cov_ikkmmfygn.f[5]++;const errors=(cov_ikkmmfygn.s[54]++,validationResult(req));cov_ikkmmfygn.s[55]++;if(!errors.isEmpty()){cov_ikkmmfygn.b[4][0]++;cov_ikkmmfygn.s[56]++;return res.status(400).json({errors:errors.array()});}else{cov_ikkmmfygn.b[4][1]++;}//console.log(req.user.id);
cov_ikkmmfygn.s[57]++;try{const user=(cov_ikkmmfygn.s[58]++,await User.findById(req.user.id).select('-password'));const profile=(cov_ikkmmfygn.s[59]++,await Profile.findById(req.params.id));const newComment=(cov_ikkmmfygn.s[60]++,{text:req.body.text,name:user.name,avatar:user.avatar,user:req.user.id});cov_ikkmmfygn.s[61]++;profile.posts.unshift(newComment);cov_ikkmmfygn.s[62]++;await profile.save();cov_ikkmmfygn.s[63]++;res.json(profile.posts);}catch(err){cov_ikkmmfygn.s[64]++;console.error(err.message);cov_ikkmmfygn.s[65]++;res.status(500).send('Server Error');}});// @route    Get api/profile/post/:profileid/:postid
// @desc     Delete a post from profile
// @access   Private (only poster and profile owner)
cov_ikkmmfygn.s[66]++;router.delete('/post/:profileid/:postid',auth,async(req,res)=>{cov_ikkmmfygn.f[6]++;cov_ikkmmfygn.s[67]++;try{const profile=(cov_ikkmmfygn.s[68]++,await Profile.findById(req.params.profileid));const post=(cov_ikkmmfygn.s[69]++,profile.posts.find(post=>{cov_ikkmmfygn.f[7]++;cov_ikkmmfygn.s[70]++;return post.id===req.params.postid;}));/*
    const posts = profile.posts;
    console.log(posts)
    console.log(req.params.postid);
    const post = posts.find({"_id":`$(req.params.postid)`});
    */cov_ikkmmfygn.s[71]++;if(!post){cov_ikkmmfygn.b[5][0]++;cov_ikkmmfygn.s[72]++;return res.status(404).json({msg:'Post not found'});}else{cov_ikkmmfygn.b[5][1]++;}// Check user
cov_ikkmmfygn.s[73]++;if((cov_ikkmmfygn.b[7][0]++,post.user.toString()!==req.user.id)&&(cov_ikkmmfygn.b[7][1]++,post.user.toString()!==profile.user._id)){cov_ikkmmfygn.b[6][0]++;cov_ikkmmfygn.s[74]++;return res.status(401).json({msg:'User not authorized'});}else{cov_ikkmmfygn.b[6][1]++;}const removeIndex=(cov_ikkmmfygn.s[75]++,profile.posts.map(post=>{cov_ikkmmfygn.f[8]++;cov_ikkmmfygn.s[76]++;return post.id;}).indexOf(req.params.postid));cov_ikkmmfygn.s[77]++;profile.posts.splice(removeIndex,1);cov_ikkmmfygn.s[78]++;await profile.save();cov_ikkmmfygn.s[79]++;res.json(profile.posts);}catch(err){cov_ikkmmfygn.s[80]++;console.error(err.message);cov_ikkmmfygn.s[81]++;if(err.kind==='ObjectId'){cov_ikkmmfygn.b[8][0]++;cov_ikkmmfygn.s[82]++;return res.status(404).json({msg:'Post not found'});}else{cov_ikkmmfygn.b[8][1]++;}cov_ikkmmfygn.s[83]++;res.status(500).send('Server Error');}});// @route    Get api/profile/post/:profileid
// @desc     Get all posts from profile
// @access   Public
cov_ikkmmfygn.s[84]++;router.get('/post/:id',async(req,res)=>{cov_ikkmmfygn.f[9]++;cov_ikkmmfygn.s[85]++;try{cov_ikkmmfygn.s[86]++;console.log(req.params.id);const profile=(cov_ikkmmfygn.s[87]++,await Profile.findById(req.params.id));cov_ikkmmfygn.s[88]++;res.json(profile.posts);}catch(err){cov_ikkmmfygn.s[89]++;console.error(err.message);cov_ikkmmfygn.s[90]++;if(err.kind=='ObjectId'){cov_ikkmmfygn.b[9][0]++;cov_ikkmmfygn.s[91]++;return res.status(400).json({msg:'Profile not found'});}else{cov_ikkmmfygn.b[9][1]++;}cov_ikkmmfygn.s[92]++;res.status(500).send('Server Error');}});// @route    Get api/profile/friend/:id
// @desc     Add friend
// @access   Private
cov_ikkmmfygn.s[93]++;router.put('/friend/:id',auth,async(req,res)=>{cov_ikkmmfygn.f[10]++;cov_ikkmmfygn.s[94]++;try{const profile=(cov_ikkmmfygn.s[95]++,await Profile.findOne({user:req.user.id}));const user=(cov_ikkmmfygn.s[96]++,await User.findById(req.params.id).select('-password'));const newComment=(cov_ikkmmfygn.s[97]++,{name:user.name,avatar:user.avatar,user:req.params.id});cov_ikkmmfygn.s[98]++;console.log(profile.friends);//Testa om man redan är vän
/*
    if(profile.friends.filter(fr => fr.user.id === req.params.id)){
      return res.status(400).json({ msg: 'This person is already your friend' });
    */cov_ikkmmfygn.s[99]++;console.log(newComment);cov_ikkmmfygn.s[100]++;profile.friends.unshift(newComment);cov_ikkmmfygn.s[101]++;console.log(profile.friends);cov_ikkmmfygn.s[102]++;await profile.save();cov_ikkmmfygn.s[103]++;res.json(profile.friends);}catch(err){cov_ikkmmfygn.s[104]++;console.error(err.message);cov_ikkmmfygn.s[105]++;res.status(500).send('Server Error');}});cov_ikkmmfygn.s[106]++;module.exports=router;