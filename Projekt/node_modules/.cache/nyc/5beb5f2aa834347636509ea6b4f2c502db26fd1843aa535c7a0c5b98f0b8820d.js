var cov_pvsrujyn1=function(){var path="/home/andmo435/Desktop/TDP013/gittat/Projekt/routes/api/users.js";var hash="62782e1f9634738cf86526e3b1b703f0197e8563";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/andmo435/Desktop/TDP013/gittat/Projekt/routes/api/users.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:2,column:15},end:{line:2,column:31}},"2":{start:{line:3,column:17},end:{line:3,column:36}},"3":{start:{line:4,column:35},end:{line:4,column:63}},"4":{start:{line:5,column:13},end:{line:5,column:41}},"5":{start:{line:6,column:15},end:{line:6,column:34}},"6":{start:{line:7,column:12},end:{line:7,column:35}},"7":{start:{line:8,column:15},end:{line:8,column:32}},"8":{start:{line:9,column:16},end:{line:9,column:47}},"9":{start:{line:10,column:15},end:{line:10,column:42}},"10":{start:{line:15,column:0},end:{line:74,column:3}},"11":{start:{line:21,column:17},end:{line:21,column:38}},"12":{start:{line:22,column:2},end:{line:24,column:3}},"13":{start:{line:23,column:4},end:{line:23,column:58}},"14":{start:{line:26,column:33},end:{line:26,column:41}},"15":{start:{line:28,column:2},end:{line:72,column:3}},"16":{start:{line:29,column:15},end:{line:29,column:42}},"17":{start:{line:31,column:4},end:{line:33,column:5}},"18":{start:{line:32,column:6},end:{line:32,column:80}},"19":{start:{line:35,column:19},end:{line:39,column:6}},"20":{start:{line:41,column:4},end:{line:46,column:7}},"21":{start:{line:49,column:17},end:{line:49,column:41}},"22":{start:{line:50,column:4},end:{line:50,column:54}},"23":{start:{line:51,column:4},end:{line:51,column:22}},"24":{start:{line:54,column:20},end:{line:58,column:5}},"25":{start:{line:62,column:4},end:{line:66,column:7}},"26":{start:{line:64,column:8},end:{line:64,column:26}},"27":{start:{line:64,column:16},end:{line:64,column:26}},"28":{start:{line:65,column:8},end:{line:65,column:26}},"29":{start:{line:70,column:4},end:{line:70,column:31}},"30":{start:{line:71,column:4},end:{line:71,column:41}},"31":{start:{line:76,column:0},end:{line:76,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:20,column:2},end:{line:20,column:3}},loc:{start:{line:20,column:21},end:{line:74,column:1}},line:20},"1":{name:"(anonymous_1)",decl:{start:{line:63,column:4},end:{line:63,column:5}},loc:{start:{line:63,column:19},end:{line:66,column:5}},line:63}},branchMap:{"0":{loc:{start:{line:22,column:2},end:{line:24,column:3}},type:"if",locations:[{start:{line:22,column:2},end:{line:24,column:3}},{start:{line:22,column:2},end:{line:24,column:3}}],line:22},"1":{loc:{start:{line:31,column:4},end:{line:33,column:5}},type:"if",locations:[{start:{line:31,column:4},end:{line:33,column:5}},{start:{line:31,column:4},end:{line:33,column:5}}],line:31},"2":{loc:{start:{line:64,column:8},end:{line:64,column:26}},type:"if",locations:[{start:{line:64,column:8},end:{line:64,column:26}},{start:{line:64,column:8},end:{line:64,column:26}}],line:64}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"62782e1f9634738cf86526e3b1b703f0197e8563"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const express=(cov_pvsrujyn1.s[0]++,require('express'));const router=(cov_pvsrujyn1.s[1]++,express.Router());const gravatar=(cov_pvsrujyn1.s[2]++,require('gravatar'));const{check,validationResult}=(cov_pvsrujyn1.s[3]++,require('express-validator'));const User=(cov_pvsrujyn1.s[4]++,require('../../models/User'));const bcrypt=(cov_pvsrujyn1.s[5]++,require('bcryptjs'));const jwt=(cov_pvsrujyn1.s[6]++,require('jsonwebtoken'));const config=(cov_pvsrujyn1.s[7]++,require('config'));const Profile=(cov_pvsrujyn1.s[8]++,require('../../models/Profile'));var ObjectId=(cov_pvsrujyn1.s[9]++,require('mongodb').ObjectID);// @route POST api/users
// @desc Register user
// @access public
cov_pvsrujyn1.s[10]++;router.post('/',[check('name','Name is required').not().isEmpty(),check('email','Please include a valid email').isEmail(),check('password','Password has to have 6 or more letters').isLength({min:6})],async(req,res)=>{cov_pvsrujyn1.f[0]++;const errors=(cov_pvsrujyn1.s[11]++,validationResult(req));cov_pvsrujyn1.s[12]++;if(!errors.isEmpty()){cov_pvsrujyn1.b[0][0]++;cov_pvsrujyn1.s[13]++;return res.status(400).json({errors:errors.array()});}else{cov_pvsrujyn1.b[0][1]++;}const{name,email,password}=(cov_pvsrujyn1.s[14]++,req.body);cov_pvsrujyn1.s[15]++;try{let user=(cov_pvsrujyn1.s[16]++,await User.findOne({email}));//Check for existing user
cov_pvsrujyn1.s[17]++;if(user){cov_pvsrujyn1.b[1][0]++;cov_pvsrujyn1.s[18]++;return res.status(400).json({errors:[{msg:'That email already exists'}]});}else{cov_pvsrujyn1.b[1][1]++;}//Get users gravatar
const avatar=(cov_pvsrujyn1.s[19]++,gravatar.url(email,{s:'200',r:'pg',d:'mm'}));cov_pvsrujyn1.s[20]++;user=new User({name,email,avatar,password});//Encrypt password
//await eller then?
const salt=(cov_pvsrujyn1.s[21]++,await bcrypt.genSalt(10));cov_pvsrujyn1.s[22]++;user.password=await bcrypt.hash(password,salt);cov_pvsrujyn1.s[23]++;await user.save();//Gives promise
//Return jsonwebtoken
const payload=(cov_pvsrujyn1.s[24]++,{user:{id:user.id}});//profile = new Profile(user);
//await profile.save();
//Sätt expires till mindre när allt är klart, högt värde för testning
cov_pvsrujyn1.s[25]++;jwt.sign(payload,config.get('jwtSecret'),{expiresIn:999999},(err,token)=>{cov_pvsrujyn1.f[1]++;cov_pvsrujyn1.s[26]++;if(err){cov_pvsrujyn1.b[2][0]++;cov_pvsrujyn1.s[27]++;throw err;}else{cov_pvsrujyn1.b[2][1]++;}cov_pvsrujyn1.s[28]++;res.json({token});});}catch(err){cov_pvsrujyn1.s[29]++;console.error(err.message);cov_pvsrujyn1.s[30]++;res.status(500).send('Server error');}});cov_pvsrujyn1.s[31]++;module.exports=router;