var cov_12kwbc4gmp=function(){var path="/home/andmo435/Desktop/TDP013/gittat/Projekt/models/Profile.js";var hash="4dcafb5a2c23fa15a426339bbb6cdcaece0adbca";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/andmo435/Desktop/TDP013/gittat/Projekt/models/Profile.js",statementMap:{"0":{start:{line:1,column:17},end:{line:1,column:36}},"1":{start:{line:2,column:15},end:{line:2,column:30}},"2":{start:{line:3,column:22},end:{line:48,column:2}},"3":{start:{line:50,column:0},end:{line:50,column:68}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"4dcafb5a2c23fa15a426339bbb6cdcaece0adbca"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const mongoose=(cov_12kwbc4gmp.s[0]++,require('mongoose'));const Schema=(cov_12kwbc4gmp.s[1]++,mongoose.Schema);const ProfileSchema=(cov_12kwbc4gmp.s[2]++,new mongoose.Schema({user:{type:mongoose.Schema.Types.ObjectId,ref:'user'},posts:[{user:{type:Schema.Types.ObjectId,ref:'users'},text:{type:String,required:true},name:{type:String},avatar:{type:String},date:{type:Date,default:Date.now}}],friends:[{name:{type:String},avatar:{type:String},user:{type:Schema.Types.ObjectId,ref:'users'}}],date:{type:Date,default:Date.now}}));cov_12kwbc4gmp.s[3]++;module.exports=Profile=mongoose.model('profile',ProfileSchema);